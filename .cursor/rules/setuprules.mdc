---
description: 
globs: 
alwaysApply: true
---
### ðŸ”„ Project Awareness & Context

- **Always read `PLANNING.md`** at the start of a new conversation to understand the project's architecture, goals, style, and constraints.

- After reading `PLANNING.md`, **closely examine the codebase to gain a detailed and comprehensive understanding of the structure of the project, existing elements, and functionality for each of those elements.**

- **Use consistent naming conventions, file structure, and architecture patterns** as described in `PLANNING.md`.

- **Always start by examining the codebase to understand the existing code and its functionality.**


### ðŸ§± Code Structure & Modularity

- **Never create a file longer than 500 lines of code.** If a file approaches this limit, refactor by splitting it into modules or helper files.

- **Organize code into clearly separated modules**, grouped by feature or responsibility.


### ðŸ“Ž Style & Conventions

- **Use Javascript and React** as the primary language.


### ðŸ“š Documentation & Explainability

- **Update `README.md`** when new features are added, dependencies change, or setup steps are modified.

- **Comment non-obvious code** and ensure everything is understandable to a mid-level developer.

- When writing complex logic, **add an inline `# Reason:` comment** explaining the why, not just the what.


### ðŸ§  AI Behavior Rules

- **Never assume missing context. Ask questions if uncertain.**

- **Never hallucinate libraries or functions** â€“ only use known, verified Javascript libraries.


- **Always confirm file paths and module names** exist before referencing them in code or tests.